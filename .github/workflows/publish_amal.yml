on:
  push:
    tags:
      - 'v*'

name: Publish Amalgamated Code

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache cpp-amalgamate
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/cpp-amalgamate
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
          key: ${{ runner.os }}-cpp-amalgamate-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cpp-amalgamate-

      - name: Install cpp-amalgamate if not cached
        run: |
          if ! command -v cpp-amalgamate &> /dev/null
          then
              cargo install cpp-amalgamate
          fi
      - name: cpp-amalgamate
        run: |
          rm -f bms_parser.hpp
          cpp-amalgamate ./src/** >> bms_parser.hpp
      # create new release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            You can find the amalgamated code in the file `bms_parser.hpp`.
          draft: false
          prerelease: false
      # upload amalgamated code
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bms_parser.hpp
          asset_name: bms_parser.hpp
          asset_content_type: text/plain